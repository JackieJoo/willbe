format: willfile-1.0.0
about:
  name: wLogger
  description: >-
    Class to log data consistently which supports colorful formatting, verbosity
    control, chaining, combining several loggers/consoles into logging network.
    Logger provides 10 levels of verbosity [ 0,9 ] any value beyond clamped and
    multiple approaches to control verbosity. Logger may use
    console/stream/process/file as input or output. Unlike alternatives,
    colorful formatting is cross-platform and works similarly in the browser and
    on the server side. Use the module to make your diagnostic code working on
    any platform you work with and to been able to redirect your output to/from
    any destination/source.
  enabled: 1
  version: 0.5.166
  interpreters: &ref_0
    - nodejs >= 6.0.0
    - chrome >= 60.0.0
    - firefox >= 60.0.0
  keywords: &ref_1
    - wTools
path:
  module.willfiles:
    path: wLogger.out.will.yml
    criterion:
      predefined: 1
  module.common:
    path: wLogger.out
    criterion:
      predefined: 1
  module.original.willfiles:
    path:
      - ../.im.will.yml
      - ../.ex.will.yml
    criterion:
      predefined: 1
  local:
    criterion:
      predefined: 1
  remote:
    criterion:
      predefined: 1
  in:
    path: .
    criterion:
      predefined: 0
  temp:
    path: .
  out:
    path: .
    criterion:
      predefined: 0
  out.debug:
    path: debug
    criterion:
      debug: 1
  out.release:
    path: release
    criterion:
      debug: 0
  proto:
    path: ../proto
  repository:
    path: 'git+https:///github.com/Wandalen/wLogger.git'
  bugs:
    path: 'https:///github.com/Wandalen/wLogger/issues'
  exported.dir.proto.export:
    path: ../proto
    criterion:
      default: 1
      debug: 1
      raw: 1
      proto: 1
      export: 1
      tar: 1
      public: 1
  exported.files.proto.export:
    path:
      - ../proto
      - ../proto/dwtools
      - ../proto/dwtools/Tools.s
      - ../proto/dwtools/abase
      - ../proto/dwtools/abase/l9
      - ../proto/dwtools/abase/l9/printer
      - ../proto/dwtools/abase/l9/printer/.DS_Store
      - ../proto/dwtools/abase/l9/printer/aChainer.s
      - ../proto/dwtools/abase/l9/printer/aChainingMixin.s
      - ../proto/dwtools/abase/l9/printer/aColoredMixin.s
      - ../proto/dwtools/abase/l9/printer/PrinterBase.s
      - ../proto/dwtools/abase/l9/printer/PrinterMid.s
      - ../proto/dwtools/abase/l9/printer/PrinterTop.s
      - ../proto/dwtools/abase/l9/printer/top
      - ../proto/dwtools/abase/l9/printer/top/Logger.s
      - ../proto/dwtools/abase/l9/printer/top/LoggerExtra.s
      - ../proto/dwtools/abase/l9/printer/top/ToLayeredHtml.s
      - ../proto/dwtools/abase/l9/printer/top/ToString.s
      - ../proto/dwtools/abase/l9.test
      - ../proto/dwtools/abase/l9.test/printer
      - ../proto/dwtools/abase/l9.test/printer/Backend.test.ss
      - ../proto/dwtools/abase/l9.test/printer/Browser.test.html
      - ../proto/dwtools/abase/l9.test/printer/Browser.test.js
      - ../proto/dwtools/abase/l9.test/printer/Chaining.test.s
      - ../proto/dwtools/abase/l9.test/printer/ChainingWithProcess.test.ss
      - ../proto/dwtools/abase/l9.test/printer/ChainingWithStream.test.ss
      - ../proto/dwtools/abase/l9.test/printer/Color.test.js
      - ../proto/dwtools/abase/l9.test/printer/Color.test.ss
      - ../proto/dwtools/abase/l9.test/printer/Other.test.s
      - ../proto/dwtools/abase/tmp.tmp
      - ../proto/dwtools/amid
      - ../proto/dwtools/atop
    criterion:
      default: 1
      debug: 1
      raw: 1
      proto: 1
      export: 1
      tar: 1
      public: 1
submodule: {}
reflector:
  reflect.proto.:
    src:
      filePath:
        'path::proto': 'path::out.*=1'
    criterion:
      debug: 0
    mandatory: 1
    inherit:
      - predefined.*
  reflect.proto.debug:
    src:
      filePath:
        'path::proto': 'path::out.*=1'
    criterion:
      debug: 1
    mandatory: 1
    inherit:
      - predefined.*
  reflect.submodules:
    src:
      filePath:
        'submodule::*/exported::*=1/path::exportedDir*=1': 'path::out.*=1'
    criterion:
      debug: 1
    mandatory: 1
    inherit:
      - predefined.*
  exported.proto.export:
    src:
      filePath:
        .: null
      prefixPath: ../proto
    criterion:
      default: 1
      debug: 1
      raw: 1
      proto: 1
      export: 1
      tar: 1
      public: 1
    mandatory: 1
  exported.files.proto.export:
    src:
      filePath:
        'path::exported.files.proto.export': null
      basePath: .
      prefixPath: 'path::exported.dir.proto.export'
    criterion:
      default: 1
      debug: 1
      raw: 1
      proto: 1
      export: 1
      tar: 1
      public: 1
    recursive: 0
    mandatory: 1
step:
  clean.out.:
    criterion:
      debug: 0
    opts:
      filePath: 'path::out.debug'
    inherit:
      - files.delete
  clean.out.debug:
    criterion:
      debug: 1
    opts:
      filePath: 'path::out.debug'
    inherit:
      - files.delete
  reflect.proto.:
    criterion:
      debug: 0
      raw: 0
    opts:
      reflector: 'reflector::reflect.proto.*=1'
    inherit:
      - files.reflect
  reflect.proto.debug:
    criterion:
      debug: 1
      raw: 0
    opts:
      reflector: 'reflector::reflect.proto.*=1'
    inherit:
      - files.reflect
  reflect.proto.raw:
    criterion:
      debug: 0
      raw: 1
    opts:
      reflector: 'reflector::reflect.proto.*=1'
    inherit:
      - files.reflect
  reflect.proto.debug.raw:
    criterion:
      debug: 1
      raw: 1
    opts:
      reflector: 'reflector::reflect.proto.*=1'
    inherit:
      - files.reflect
  reflect.submodules.:
    criterion:
      debug: 1
      raw: 0
    opts:
      reflector: 'reflector::reflect.submodules*=1'
    inherit:
      - files.reflect
  reflect.submodules.raw:
    criterion:
      debug: 1
      raw: 1
    opts:
      reflector: 'reflector::reflect.submodules*=1'
    inherit:
      - files.reflect
  reflect.submodules:
    criterion:
      debug: 1
    opts:
      reflector: 'reflector::reflect.submodules*'
    inherit:
      - files.reflect
  export.proto:
    criterion:
      debug: 1
      proto: 1
    opts:
      export: 'path::proto'
      tar: 0
    inherit:
      - module.export
build:
  debug.raw:
    criterion:
      default: 1
      debug: 1
      raw: 1
    steps:
      - 'step::clean.out*=1'
      - 'step::reflect.proto.*=1'
  debug.compiled:
    criterion:
      debug: 1
      raw: 0
    steps:
      - 'step::clean.out*=1'
      - 'step::reflect.proto.*=1'
  release.raw:
    criterion:
      debug: 0
      raw: 1
    steps:
      - 'step::clean.out*=1'
      - 'step::reflect.proto.*=1'
  release.compiled:
    criterion:
      debug: 0
      raw: 0
    steps:
      - 'step::clean.out*=1'
      - 'step::reflect.proto.*=1'
  all:
    steps:
      - 'build::debug.raw'
      - 'build::release.compiled'
  proto.export:
    criterion:
      default: 1
      debug: 1
      raw: 1
      proto: 1
      export: 1
      tar: 1
      public: 1
    steps:
      - 'build::debug.raw'
      - 'step::export.proto'
exported:
  proto.export:
    version: 0.5.166
    criterion:
      default: 1
      debug: 1
      raw: 1
      proto: 1
      export: 1
      tar: 1
      public: 1
    exportedReflector: 'reflector::exported.proto.export'
    exportedFilesReflector: 'reflector::exported.files.proto.export'
    exportedDirPath: 'path::exported.dir.proto.export'
    exportedFilesPath: 'path::exported.files.proto.export'
module:
  ../:
    about:
      name: wLogger
      description: >-
        Class to log data consistently which supports colorful formatting,
        verbosity control, chaining, combining several loggers/consoles into
        logging network. Logger provides 10 levels of verbosity [ 0,9 ] any
        value beyond clamped and multiple approaches to control verbosity.
        Logger may use console/stream/process/file as input or output. Unlike
        alternatives, colorful formatting is cross-platform and works similarly
        in the browser and on the server side. Use the module to make your
        diagnostic code working on any platform you work with and to been able
        to redirect your output to/from any destination/source.
      enabled: 1
      version: 0.5.166
      interpreters: *ref_0
      keywords: *ref_1
    path:
      module.willfiles:
        path:
          - .im.will.yml
          - .ex.will.yml
        criterion:
          predefined: 1
      module.original.willfiles:
        path:
          - .im.will.yml
          - .ex.will.yml
        criterion:
          predefined: 1
      module.common:
        path: ./
        criterion:
          predefined: 1
      local:
        criterion:
          predefined: 1
      remote:
        criterion:
          predefined: 1
      in:
        path: .
        criterion:
          predefined: 0
      temp:
        path: out
      out:
        path: out
        criterion:
          predefined: 0
      out.debug:
        path: ./out/debug
        criterion:
          debug: 1
      out.release:
        path: ./out/release
        criterion:
          debug: 0
      proto:
        path: ./proto
      repository:
        path: 'git+https:///github.com/Wandalen/wLogger.git'
      bugs:
        path: 'https:///github.com/Wandalen/wLogger/issues'
      exported.dir.proto.export:
        path: ./proto
        criterion:
          default: 1
          debug: 1
          raw: 1
          proto: 1
          export: 1
          tar: 1
          public: 1
      exported.files.proto.export:
        path:
          - proto
          - proto/dwtools
          - proto/dwtools/Tools.s
          - proto/dwtools/abase
          - proto/dwtools/abase/l9
          - proto/dwtools/abase/l9/printer
          - proto/dwtools/abase/l9/printer/.DS_Store
          - proto/dwtools/abase/l9/printer/aChainer.s
          - proto/dwtools/abase/l9/printer/aChainingMixin.s
          - proto/dwtools/abase/l9/printer/aColoredMixin.s
          - proto/dwtools/abase/l9/printer/PrinterBase.s
          - proto/dwtools/abase/l9/printer/PrinterMid.s
          - proto/dwtools/abase/l9/printer/PrinterTop.s
          - proto/dwtools/abase/l9/printer/top
          - proto/dwtools/abase/l9/printer/top/Logger.s
          - proto/dwtools/abase/l9/printer/top/LoggerExtra.s
          - proto/dwtools/abase/l9/printer/top/ToLayeredHtml.s
          - proto/dwtools/abase/l9/printer/top/ToString.s
          - proto/dwtools/abase/l9.test
          - proto/dwtools/abase/l9.test/printer
          - proto/dwtools/abase/l9.test/printer/Backend.test.ss
          - proto/dwtools/abase/l9.test/printer/Browser.test.html
          - proto/dwtools/abase/l9.test/printer/Browser.test.js
          - proto/dwtools/abase/l9.test/printer/Chaining.test.s
          - proto/dwtools/abase/l9.test/printer/ChainingWithProcess.test.ss
          - proto/dwtools/abase/l9.test/printer/ChainingWithStream.test.ss
          - proto/dwtools/abase/l9.test/printer/Color.test.js
          - proto/dwtools/abase/l9.test/printer/Color.test.ss
          - proto/dwtools/abase/l9.test/printer/Other.test.s
          - proto/dwtools/abase/tmp.tmp
          - proto/dwtools/amid
          - proto/dwtools/atop
        criterion:
          default: 1
          debug: 1
          raw: 1
          proto: 1
          export: 1
          tar: 1
          public: 1
    submodule: {}
    reflector:
      reflect.proto.:
        src:
          filePath:
            'path::proto': 'path::out.*=1'
        criterion:
          debug: 0
        mandatory: 1
        inherit:
          - predefined.*
      reflect.proto.debug:
        src:
          filePath:
            'path::proto': 'path::out.*=1'
        criterion:
          debug: 1
        mandatory: 1
        inherit:
          - predefined.*
      reflect.submodules:
        src:
          filePath:
            'submodule::*/exported::*=1/path::exportedDir*=1': 'path::out.*=1'
        criterion:
          debug: 1
        mandatory: 1
        inherit:
          - predefined.*
      exported.proto.export:
        src:
          filePath:
            .: null
          prefixPath: proto
        criterion:
          default: 1
          debug: 1
          raw: 1
          proto: 1
          export: 1
          tar: 1
          public: 1
        mandatory: 1
      exported.files.proto.export:
        src:
          filePath:
            'path::exported.files.proto.export': null
          basePath: .
          prefixPath: 'path::exported.dir.proto.export'
        criterion:
          default: 1
          debug: 1
          raw: 1
          proto: 1
          export: 1
          tar: 1
          public: 1
        recursive: 0
        mandatory: 1
    step:
      clean.out.:
        criterion:
          debug: 0
        opts:
          filePath: 'path::out.debug'
        inherit:
          - files.delete
      clean.out.debug:
        criterion:
          debug: 1
        opts:
          filePath: 'path::out.debug'
        inherit:
          - files.delete
      reflect.proto.:
        criterion:
          debug: 0
          raw: 0
        opts:
          reflector: 'reflector::reflect.proto.*=1'
        inherit:
          - files.reflect
      reflect.proto.debug:
        criterion:
          debug: 1
          raw: 0
        opts:
          reflector: 'reflector::reflect.proto.*=1'
        inherit:
          - files.reflect
      reflect.proto.raw:
        criterion:
          debug: 0
          raw: 1
        opts:
          reflector: 'reflector::reflect.proto.*=1'
        inherit:
          - files.reflect
      reflect.proto.debug.raw:
        criterion:
          debug: 1
          raw: 1
        opts:
          reflector: 'reflector::reflect.proto.*=1'
        inherit:
          - files.reflect
      reflect.submodules.:
        criterion:
          debug: 1
          raw: 0
        opts:
          reflector: 'reflector::reflect.submodules*=1'
        inherit:
          - files.reflect
      reflect.submodules.raw:
        criterion:
          debug: 1
          raw: 1
        opts:
          reflector: 'reflector::reflect.submodules*=1'
        inherit:
          - files.reflect
      reflect.submodules:
        criterion:
          debug: 1
        opts:
          reflector: 'reflector::reflect.submodules*'
        inherit:
          - files.reflect
      export.proto:
        criterion:
          debug: 1
          proto: 1
        opts:
          export: 'path::proto'
          tar: 0
        inherit:
          - module.export
    build:
      debug.raw:
        criterion:
          default: 1
          debug: 1
          raw: 1
        steps:
          - 'step::clean.out*=1'
          - 'step::reflect.proto.*=1'
      debug.compiled:
        criterion:
          debug: 1
          raw: 0
        steps:
          - 'step::clean.out*=1'
          - 'step::reflect.proto.*=1'
      release.raw:
        criterion:
          debug: 0
          raw: 1
        steps:
          - 'step::clean.out*=1'
          - 'step::reflect.proto.*=1'
      release.compiled:
        criterion:
          debug: 0
          raw: 0
        steps:
          - 'step::clean.out*=1'
          - 'step::reflect.proto.*=1'
      all:
        steps:
          - 'build::debug.raw'
          - 'build::release.compiled'
      proto.export:
        criterion:
          default: 1
          debug: 1
          raw: 1
          proto: 1
          export: 1
          tar: 1
          public: 1
        steps:
          - 'build::debug.raw'
          - 'step::export.proto'
    exported:
      proto.export:
        version: 0.5.166
        criterion:
          default: 1
          debug: 1
          raw: 1
          proto: 1
          export: 1
          tar: 1
          public: 1
        exportedReflector: 'reflector::exported.proto.export'
        exportedFilesReflector: 'reflector::exported.files.proto.export'
        exportedDirPath: 'path::exported.dir.proto.export'
        exportedFilesPath: 'path::exported.files.proto.export'
  wLogger.out: root
