
path :

  proto : './proto'
  temp : 'out'
  in : '.'
  out : 'out'
  out.debug1 : './out/debug1'
  out.debug2 : './out/debug2'

reflector :

  reflect.proto1 :
    src : path::proto
    dst : path::out.debug1

  reflect.proto2 :
    inherit : reflect.proto1
    dst : path::out.debug2

  not.test :
    filePath :
      '**.test**' : 0

  only.js :
    filePath :
      '**.js' : 1

  reflect.not.test.only.js.v1 :
    inherit :
      - not.test
      - only.js
    src : path::proto
    dst :
      - path::out.debug1
      - path::out.debug2

  # inheriting of file filter

  files1 : # for src only
    src :
      - proto/File.js
      - proto/File.s
    dst : out2

  files2 : # for dst only
    src :
      - proto/File.test.js
    dst : path::out

  files3 : # for src/basePath only
    src :
      filePath : src1
      basePath : proto
    dst : dst1

  reflect.files :
    inherit : reflector::files3
    src : reflector::files1
    dst : reflector::files2

build :

  debug1 :
    steps :
      - step::reflect.proto1

  debug2 :
    steps :
      - step::reflect.proto2

  debug3 :
    steps :
      - step::reflect.not.test.only.js.v1

  files1 :
    steps :
      - reflect.files
